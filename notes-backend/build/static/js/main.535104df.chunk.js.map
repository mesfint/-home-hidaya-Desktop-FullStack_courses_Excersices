{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportanceOf","label","important","StrictMode","Fragment","className","content","onClick","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","Container","styled","div","height","display","justifyContent","alignItems","border","Button","button","paddingTop","marginTop","outline","width","paddingBottom","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","returnedNote","length","concat","value","onChange","target","placeholder","map","find","changedNote","catch","error","setTimeout","plain","href","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.535104df.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Note = ({ note, toggleImportanceOf }) => {\n  const label = note.important ? 'make not important' : 'make important';\n\n  /*   const handleDelete = (id) => {\n    deleteNote(note.id);\n  }; */\n  return (\n    <>\n      <React.StrictMode>\n        <React.Fragment>\n          <li className=\"note\">\n            {note.content}\n            <button onClick={toggleImportanceOf}>{label}</button>\n          </li>\n        </React.Fragment>\n      </React.StrictMode>\n      {/*    <DeleteFilled\n          onClick={handleDelete}\n          style={{ fontSize: '1.3rem', color: '#08c' }}\n        /> */}\n    </>\n  );\n};\n","import axios from 'axios';\n\n/* const getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n */\nconst baseUrl = '/api/notes/';\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  /*   const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }; */\n  //return request.then((response) => response.data.concat(nonExisting));\n  return request.then((response) => response.data);\n};\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n/* Since the names of the keys and the assigned variables are the same, we can write \nthe object definition with more compact syntax: */\nconst noteService = { getAll, create, update };\n\nexport default noteService;\n","import React from 'react';\n\nexport const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n","import React from 'react';\n\nexport const Footer = () => {\n  const footerStyles = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyles}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Note } from './components/Note';\nimport noteService from './services/notes';\nimport { Notification } from './components/Notification';\nimport { Footer } from './components/Footer';\n\nimport { Typography, Form, Input, Divider } from 'antd';\nimport { AppstoreOutlined, BarsOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport './App.css';\n\nconst Container = styled.div({\n  height: '25vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  border: '1px dashed #545454',\n});\nconst Button = styled.button({\n  border: '1px solid #c4c4c4',\n  paddingTop: '0px',\n  marginTop: '5px',\n  outline: 'none',\n  height: '30px',\n  width: '100px',\n  paddingBottom: '-10px',\n});\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  //const {notes} = props;\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  function handleInputChange(e) {\n    setNewNote(e.target.value);\n  }\n  const toggleImportanceOf = (id) => {\n    //const url = `http://localhost:3002/notes/${id}`;\n    const note = notes.find((note) => note.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was  already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 1000);\n        setNotes(notes.filter((note) => note.id !== id));\n      });\n  };\n\n  //Add new notes\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      /* id: notes.length + 1 */\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      if (newNote.length > 0) {\n        setNotes(notes.concat(returnedNote));\n        setNewNote('');\n      }\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Notes</h1>\n        <Notification message={errorMessage} />\n        <Container>\n          <form onSubmit={addNote}>\n            <input\n              className=\"input\"\n              value={newNote}\n              onChange={handleInputChange}\n              placeholder=\"Add notes...\"\n            />\n            <Button className=\"submit\">Save note</Button>\n          </form>\n        </Container>\n        <div>\n          <Button onClick={() => setShowAll(!showAll)}>\n            {showAll ? (\n              <p\n                style={{\n                  fontSize: '1rem',\n                  color: '#08c',\n                }}\n              >\n                important\n              </p>\n            ) : (\n              <p style={{ fontSize: '1rem', color: '#08c' }}>all</p>\n            )}\n          </Button>\n          <h3>{`   You have ${notes.length} notes `}</h3>\n        </div>\n        <ul>\n          {notesToShow.map((note) => (\n            <Note\n              key={note.id}\n              note={note}\n              toggleImportanceOf={() => toggleImportanceOf(note.id)}\n\n              /*  deleteNote={deleteNote} */\n              /*    date={note.date} */\n              /*  id={note.id} */\n            />\n          ))}\n        </ul>\n\n        <div>\n          <Divider plain></Divider>\n          <a href=\"https://github.com/mesfint/FullStack_courses_Excersices/tree/master/note-app\">\n            Source Code\n          </a>\n        </div>\n        <div>\n          <Footer />\n          Made with ❤️ &nbsp; by MesfinT ©2021 ✌️\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n\n/* const notes = [\n  {\n    id: 1,\n    content: 'HTML is Easy',\n    date: new Date().toLocaleString(),\n    important: false,\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only JS',\n    date: new Date().toLocaleString(),\n    important: true,\n  },\n  {\n    id: 3,\n    content: 'GET ans POST are the most important methods of HTTP protocol',\n    date: new Date().toLocaleString(),\n    important: false,\n  },\n];\n */\n"],"sourceRoot":""}